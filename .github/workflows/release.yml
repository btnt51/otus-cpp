name: 'C++ CI'

on:
  push:
    branches:
      - hw-8

jobs:
  build-ubuntu:
    name: Build on Ubuntu
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install boost
        uses: MarkusJx/install-boost@v2.4.3
        id: install-boost
        with:
          boost_version: 1.81.0
          platform_version: 18.04
          link: static+shared
      - name: Prepare system to boost
        run: |
          export PATH=$PATH:${{steps.install-boost.outputs.BOOST_ROOT}}/lib
          export LD_LIBRARY_PATH=${{steps.install-boost.outputs.BOOST_ROOT}}/lib
      #- name: Configure CMake
       # run: |
        #    cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE -B build\
         #   -DBoost_INCLUDE_DIR=${{steps.install-boost.outputs.BOOST_ROOT}}/include\
          #  -DBoost_LIBRARY_DIRS=${{steps.install-boost.outputs.BOOST_ROOT}}/lib
        # env:
          #  BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
      - name: Prepare build.sh
        run: chmod +x build.sh
      - name: Test
        run: |
          ./build.sh ${{ github.run_number }} ON test ${{steps.install-boost.outputs.BOOST_ROOT}}/include ${{steps.install-boost.outputs.BOOST_ROOT}}/lib ${{ steps.install-boost.outputs.BOOST_ROOT }}
          ./home/runner/work/otus-cpp/otus-cpp/build/test
      - name: Build
        run: ./build.sh ${{ github.run_number }} OFF package ${{steps.install-boost.outputs.BOOST_ROOT}}/include ${{steps.install-boost.outputs.BOOST_ROOT}}/lib ${{ steps.install-boost.outputs.BOOST_ROOT }}
      - name: Execute program on linux
        run: |
          sudo apt install -y ~/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/build/release/bayan-0.0.${{ github.run_number }}-Linux.deb
          bayan --scanDir /home/runner/work/otus-cpp/otus-cpp/build --excludeDir /home/runner/work/otus-cpp/otus-cpp/ build/tests/data --depth=10    
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/release/*
          tag_name: ${{ github.run_number }}
          name: Release ${{ github.run_number }}

  build-macos:
    name: Build on MacOS
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Prepare build.sh
        run: chmod +x build.sh
      - name: Download boost
        uses: MarkusJx/install-boost@v2.4.3
        id: install-boost
        with:
            boost_version: 1.81.0
            platform_version: 12
            link: static+shared
     # - name: Configure CMake
      #  run: |
       #     cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE -B build\
        #    -DBoost_INCLUDE_DIR=${{steps.install-boost.outputs.BOOST_ROOT}}/include\
        #    -DBoost_LIBRARY_DIRS=${{steps.install-boost.outputs.BOOST_ROOT}}/lib
        #env:
         #   BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
      - name: Test
        run: |
          ./build.sh ${{ github.run_number }} ON test ${{steps.install-boost.outputs.BOOST_ROOT}}/include ${{steps.install-boost.outputs.BOOST_ROOT}}/lib ${{ steps.install-boost.outputs.BOOST_ROOT }}
          test
      - name: Build
        run: ./build.sh ${{ github.run_number }} OFF package ${{steps.install-boost.outputs.BOOST_ROOT}}/include ${{steps.install-boost.outputs.BOOST_ROOT}}/lib ${{ steps.install-boost.outputs.BOOST_ROOT }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/release/*
          tag_name: ${{ github.run_number }}
          name: Release ${{ github.run_number }}
